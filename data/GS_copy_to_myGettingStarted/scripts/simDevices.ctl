// ------------------------------------------------------------------------
// Simulation script for GettingStarted Application   V1   2004-04-22   ETM
// ------------------------------------------------------------------------
// Automatic feedback simulation: this script generates the responses to
// commands sent by an operator to a device. This feedback would normally
// be generated by the PLC or RTU... so this scipt sort of simulates the
// PLC and sometimes the process; e.g. if the operator sets 
// V1.cmd.manual for a valve, the PLC would answer with V1.state.manual  
main()
{
  dyn_string pumps, valves;
  int i;

  addGlobal("g_responseDelay",INT_VAR);
  addGlobal("g_devSimOn",BOOL_VAR);

  
  dpConnect("updateDelayCB","SimControl.devices.responseDelay",
                            "SimControl.devices.on");
  
  // retrieve all names of currently existing instances of DPT GS_VALVE and GS_PUMP
  valves = dpNames("*","GS_VALVE");
  pumps = dpNames("*","GS_PUMP");
  
  // create different connect groups to simulate only the required responses to a single change
  // By connecting to the different command items of all existing devices in a
  // loop, we do not have to know how many devices will be existing later on
  for(i = 1; i <= dynlen(valves); i++)
  {
     dpConnect("valveStateCB",valves[i]+".cmd.stop",
                              valves[i]+".cmd.position",
                              valves[i]+".state.manual");
  }

  for(i = 1; i <= dynlen(pumps); i++)
  {
     dpConnect("pumpStateCB",pumps[i]+".cmd.on",
                             pumps[i]+".cmd.speed",
                             pumps[i]+".state.manual");
  }
  
  dynAppend(valves,pumps);
  
  // manual mode is the same for pumps and valves so handle it in one callback
  for(i = 1; i <= dynlen(valves); i++)
  {
     dpConnect("manStateCB",valves[i]+".cmd.manual");
  }
  
  dpConnect("allOffCB",false,"SimControl.devices.allOff");
  dpConnect("fullAutoCB",false,"SimControl.fullAuto");
}
// end of "main()"
// ------------------------------------------------------------------------  

// ------------------------------------------------------------------------ 
// call back function for simulation of valve positions
valveStateCB(string dp1, bool stop, string dp2, float position)
{
  
  string dp;
  bool stateClosed;
  float statePos; 

  if(!g_devSimOn)
    return;
  
  dp = dpSubStr(dp1,DPSUB_SYS_DP); 
  
  if (position == 0)
  {
    stateClosed = true;
    statePos = 0;
  }
  else
  {    
    stateClosed = false;
    statePos = position;
  }
  

  delay(0,g_responseDelay);
  
  dpSet(dp+".state.closed",stateClosed,
        dp+".state.position",statePos);  

  if(stop)
    dpSet(dp+".cmd.stop",0);

}
// end of "valveStateCB()"
// ------------------------------------------------------------------------  

// ------------------------------------------------------------------------ 
// call back function for simulation of pump operation
pumpStateCB(string dp1, bool on, string dp2, float speed)
{
  string dp;
  bool stateOn;
  float stateSpeed; 

  if(!g_devSimOn)
    return;

  
  dp = dpSubStr(dp1,DPSUB_SYS_DP); 
  
  if (speed == 0)
  {
    stateOn = false;
    stateSpeed = 0;
  }
  else
  {    
    stateOn = true;
    stateSpeed = speed;
  }
  
  delay(0,g_responseDelay);
  
  dpSet(dp+".state.on",stateOn,
        dp+".state.speed",stateSpeed);  
}
// end of "pumpStateCB()"
// ------------------------------------------------------------------------  


// ------------------------------------------------------------------------ 
// call back function for simulation manual modes for all devices
manStateCB(string dp1, bool man)
{
  string dp;

  if(!g_devSimOn)
    return;


  dp = dpSubStr(dp1,DPSUB_SYS_DP);
   
  delay(0,g_responseDelay);
  
  dpSet(dp+".state.manual",man);  
}
// end of "manStateCB()"
// ------------------------------------------------------------------------  

updateDelayCB(string dp, int del, string dp2, bool on)
{
  g_responseDelay = del;
  g_devSimOn = on;
}
// end of "updateDelayCB()"
// ------------------------------------------------------------------------  

allOffCB(string dp, bool off)
{
  if(off)
  {
    dpSet("P1.cmd.manual",true,
          "V1.cmd.manual",true,
          "V2.cmd.manual",true,
          "V3.cmd.manual",true);
    dpSet("P1.cmd.speed",0);
    delay(0,(g_responseDelay>100)?g_responseDelay:100);       
    dpSet("V1.cmd.position",0,
          "V1.cmd.stop",true,
          "V2.cmd.position",0,
          "V2.cmd.stop",true,  
          "V3.cmd.position",0,
          "V3.cmd.stop",true);
  }
}
// end of "allOffCB()"
// ------------------------------------------------------------------------  

fullAutoCB(string dp, bool fullAuto)
{
  if(fullAuto)
  {
    dpSet("P1.cmd.manual",false,
          "V1.cmd.manual",false,
          "V2.cmd.manual",false,
          "V3.cmd.manual",false);    
    
    dpSet("V1.cmd.position",85,
          "V1.cmd.stop",false,
          "V2.cmd.position",50,
          "V2.cmd.stop",false);  
  }
}
// end of "manStateCB()"
// ------------------------------------------------------------------------  
